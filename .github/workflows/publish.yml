name: Build and Push
on:
  push:
    tags:
      - "*"
env:
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
jobs:
  build:
    name: ${{ matrix.image }} - ${{ matrix.arch }} docker build & push
    runs-on: ${{ fromJSON('{"arm64":"buildjet-2vcpu-ubuntu-2204-arm","amd64":"ubuntu-22.04"}')[matrix.arch] }}
    strategy:
      matrix:
        arch:
          - amd64
          - arm64
        image:
          - build-go-alpine
          - service-base-alpine
          - build-api
          - build-swaggercodegen
          - multi-build-go
          - multi-build-godynamic
          - multi-build-java
          - multi-build-js
    steps:
      - uses: actions/checkout@v4
      - name: Build & push container
        uses: ./.github/actions/build-docker-images
        with:
          arch: ${{ matrix.arch }}
          image: ${{ matrix.image }}
          git_tag: $GITHUB_REF_NAME

  push-manifests:
    runs-on: ubuntu-20.04
    needs:
      - build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Configure DockerHub
        uses: ./.github/actions/configure-dockerhub
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Create and push manifest for multiarch
        run: cd images && make push-manifests GIT_TAG=$GITHUB_REF_NAME
