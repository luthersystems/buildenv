ARG GOLANG_VERSION
ARG ALPINE_VERSION

#
# aws builder
#

FROM alpine:${ALPINE_VERSION} AS aws

RUN set -ex; \
  apk add --no-cache \
  unzip groff curl

# Detect architecture dynamically
RUN ARCH=$(uname -m); \
  if [ "$ARCH" = "x86_64" ]; then \
  AWS_ARCH="x86_64"; \
  elif [ "$ARCH" = "aarch64" ]; then \
  AWS_ARCH="aarch64"; \
  else \
  echo "Unsupported architecture: $ARCH"; exit 1; \
  fi; \
  curl -sL "https://awscli.amazonaws.com/awscli-exe-linux-${AWS_ARCH}.zip" -o awscliv2.zip; \
  unzip awscliv2.zip; \
  ./aws/install --bin-dir /aws-cli-bin; \
  rm -rf awscliv2.zip aws/

# Verify installation
RUN /aws-cli-bin/aws --version

#
# Azure CLI builder
#

FROM alpine:${ALPINE_VERSION} AS azcli

ARG AZCLI_VER
ENV AZCLI_VER=$AZCLI_VER

WORKDIR /az

RUN set -ex; \
  apk add --no-cache \
  build-base libffi-dev openssl-dev cargo python3-dev py3-pip; \
  python3 -m venv ./venv; \
  . ./venv/bin/activate; \
  pip install --no-cache-dir azure-cli==${AZCLI_VER}

#
# Go utils
#

FROM golang:${GOLANG_VERSION}-alpine${ALPINE_VERSION} AS go-alpine-downloader

ARG GO_BINDATA_VERSION
RUN go install "github.com/go-bindata/go-bindata/v3/go-bindata@v${GO_BINDATA_VERSION}"
ARG GO_TESTSUM_VERSION
RUN go install "gotest.tools/gotestsum@v${GO_TESTSUM_VERSION}"
ARG GOLANGCI_LINT_VERSION
RUN wget -O- -nv https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s "v${GOLANGCI_LINT_VERSION}"

#
# Godynamic
#

FROM alpine:$ALPINE_VERSION

CMD ["/bin/sh"]
RUN test -e /etc/nsswitch.conf || echo "hosts: files dns" >/etc/nsswitch.conf

ENV GOPATH=/go
ENV GOCACHE=/tmp
ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
WORKDIR /go

RUN mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH" && \
  apk add --no-cache ca-certificates tzdata libltdl rsync zip openssh git-lfs bash shadow gcc musl-dev make linux-headers curl tini gcompat jq python3-dev py3-pip groff docker docker-compose openrc && \
  rc-update add docker boot

ENTRYPOINT ["tini", "--", "make", "-f", "/opt/Dockerfile.godynamic.mk"]
COPY build-godynamic.mk /opt/Dockerfile.godynamic.mk
COPY Dockerfile.build-godynamic.static /opt/Dockerfile.godynamic.static

# set up private repo access for go mod
RUN git config --system url."git@github.com:luthersystems/license.git".insteadOf "https://github.com/luthersystems/license"; \
  git config --system url."git@github.com:luthersystems/substrate.git".insteadOf "https://github.com/luthersystems/substrate"; \
  git config --system url."git@github.com:luthersystems/chainidentifier.git".insteadOf "https://github.com/luthersystems/chainidentifier"; \
  ssh-keyscan -t Ed25519 -H bitbucket.org | tee -a /etc/ssh/ssh_known_hosts; \
  ssh-keyscan -t Ed25519 -H github.com | tee -a /etc/ssh/ssh_known_hosts

COPY --from=go-alpine-downloader /usr/local/go/ /usr/local/go/
COPY --from=go-alpine-downloader /go/bin/go-bindata /go/bin/go-bindata
COPY --from=go-alpine-downloader /go/bin/gotestsum /go/bin/gotestsum
COPY --from=go-alpine-downloader /go/bin/golangci-lint /go/bin/golangci-lint
COPY --from=aws /usr/local/aws-cli/ /usr/local/aws-cli/
COPY --from=aws /aws-cli-bin/ /usr/local/bin/
COPY --from=azcli /az /az

ENV PATH="/az/venv/bin:$PATH"
