ARG GOLANG_VERSION=1.16.14
ARG ALPINE_VERSION=3.15

FROM ubuntu:20.04 as aws

RUN apt-get update
RUN apt-get install --no-install-recommends -y gnupg curl ca-certificates
ADD aws-cli-pkg-key.asc /tmp/aws-cli-pkg-key.asc
RUN gpg --import /tmp/aws-cli-pkg-key.asc

WORKDIR /tmp

ARG AWSCLI_VER=2.7.0
ENV AWSCLI_VER=$AWSCLI_VER
RUN curl -fsSL -o awscliv2.zip "https://awscli.amazonaws.com/awscli-exe-linux-$(uname -m)-${AWSCLI_VER}.zip"
RUN curl -fsSL -o awscliv2.sig "https://awscli.amazonaws.com/awscli-exe-linux-$(uname -m)-${AWSCLI_VER}.zip.sig"
RUN gpg --verify awscliv2.sig awscliv2.zip

FROM golang:${GOLANG_VERSION}-alpine${ALPINE_VERSION} as go-alpine-downloader

RUN go install github.com/go-bindata/go-bindata/v3/go-bindata@v3.1.3
RUN go install github.com/securego/gosec/v2/cmd/gosec@v2.11.0
RUN go install gotest.tools/gotestsum@v1.8.1
RUN go install honnef.co/go/tools/cmd/staticcheck@2021.1.2

FROM alpine:$ALPINE_VERSION
MAINTAINER Sam Wood <sam.wood@luthersystems.com>

ARG AZCLI_VER=2.18.0
ENV AZCLI_VER=$AZCLI_VER

CMD ["/bin/sh"]
RUN [ ! -e /etc/nsswitch.conf ] && echo "hosts: files dns" >/etc/nsswitch.conf

COPY --from=go-alpine-downloader /usr/local/go/ /usr/local/go/

ENV GOPATH=/go
ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
RUN mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
WORKDIR /go
RUN apk add --no-cache ca-certificates tzdata libltdl rsync zip openssh git-lfs bash shadow gcc musl-dev make linux-headers curl tini gcompat python3 jq

RUN apk add --update docker openrc
RUN rc-update add docker boot

COPY build-godynamic.mk /opt/Dockerfile.godynamic.mk
COPY Dockerfile.build-godynamic.static /opt/Dockerfile.godynamic.static
ENV GOCACHE /tmp

# set up private repo access for go mod
RUN git config --system url."git@bitbucket.org:".insteadOf "https://bitbucket.org/"
RUN ssh-keyscan -H bitbucket.org | tee -a /etc/ssh/ssh_known_hosts
ENV GOPRIVATE bitbucket.org/luthersystems

ENTRYPOINT ["tini", "--", "make", "-f", "/opt/Dockerfile.godynamic.mk"]

COPY --from=go-alpine-downloader /go/bin/go-bindata /go/bin/go-bindata
COPY --from=go-alpine-downloader /go/bin/gosec /go/bin/gosec
COPY --from=go-alpine-downloader /go/bin/gotestsum /go/bin/gotestsum
COPY --from=go-alpine-downloader /go/bin/staticcheck /go/bin/staticcheck

# extra functionality required by pipelines runs (CI)
COPY --from=aws /tmp/awscliv2.zip /tmp/awscliv2.zip
RUN unzip -d /tmp /tmp/awscliv2.zip && /tmp/aws/install && rm -rf /tmp/aws*

RUN apk add --no-cache -q --virtual=build gcc musl-dev python3-dev py3-pip libffi-dev openssl-dev cargo make \
     && pip install --no-cache-dir azure-cli==${AZCLI_VER} -q \
     && apk del --purge build
